<project name="hohenheim" basedir="." default="release" xmlns:ivy="antlib:org.apache.ivy.ant">

  <property name="PID-DISTRO" value="${ant.project.name}-distro"/>
  <property name="PID" value="${ant.project.name}"/>
  <property file="build.properties" />
  <include file="${basedir}/common.xml"/>

  <!--
       paths used for compilation and run  
       -->

  <path id="compile.path.id">
    <fileset dir="${lib.dir}/libjar" />
    <fileset dir="${distrib.dir}" />
    <fileset dir="${scala.lib.dir}"/>
    <fileset dir="${clojure.dir}"/>
    <path location="${build.dir}" />
    <path location="${src.dir}/clojure" />
  </path>

  <path id="test.path.id">
    <fileset dir="${lib.dir}/test" />
    <fileset dir="${scala.lib.dir}"/>
    <fileset dir="${clojure.dir}" />
    <fileset dir="${distrib.dir}" />
    <path location="${build.dir}" />
    <path location="${build.test.dir}" />
  </path>


  <!--
       compile source code
       -->

  <target name="compile_java">
    <javac sourcepath="" srcdir="${src.dir}/java" destdir="${build.dir}"
      includeantruntime="false" excludes=""
      debug="${build.debug}" debuglevel="lines,vars,source" classpathref="compile.path.id">
      <compilerarg line="-Xlint:deprecation -Xlint:unchecked"/>
      <include name="**/*.java"/>
    </javac>
  </target>

  <target name="clj-one">
    <java classname="clojure.lang.Compile" fork="true" failonerror="true" maxmemory="2048m" classpathref="compile.path.id">
      <sysproperty key="clojure.compile.warn-on-reflection" value="true"/>
      <sysproperty key="clojure.compile.path" value="${build.dir}" />
      <arg value="comzotohcljc.dbio.simple" />
    </java>
  </target>

  <target name="compile_clj">
    <java classname="clojure.lang.Compile" fork="true" failonerror="true" maxmemory="2048m" classpathref="compile.path.id">
      <sysproperty key="clojure.compile.warn-on-reflection" value="true"/>
      <sysproperty key="clojure.compile.path" value="${build.dir}" />

      <arg value="comzotohcljc.util.core" />
      <arg value="comzotohcljc.util.bytes" />
      <arg value="comzotohcljc.util.cmdline" />
      <arg value="comzotohcljc.util.constants" />
      <arg value="comzotohcljc.util.countrycode" />
      <arg value="comzotohcljc.util.dates" />
      <arg value="comzotohcljc.util.files" />
      <arg value="comzotohcljc.util.guids" />
      <arg value="comzotohcljc.util.io" />
      <arg value="comzotohcljc.util.meta" />
      <arg value="comzotohcljc.util.mime" />
      <arg value="comzotohcljc.util.process" />
      <arg value="comzotohcljc.util.seqnum" />
      <arg value="comzotohcljc.util.str" />
      <arg value="comzotohcljc.util.usastate" />
      <arg value="comzotohcljc.util.ini" />
      <arg value="comzotohcljc.util.scheduler" />

      <arg value="comzotohcljc.i18n.resources" />

      <arg value="comzotohcljc.crypto.core" />
      <arg value="comzotohcljc.crypto.codec" />
      <arg value="comzotohcljc.crypto.stores" />
      <arg value="comzotohcljc.crypto.ssl" />

      <arg value="comzotohcljc.net.comms" />
      <arg value="comzotohcljc.netty.comms" />

      <arg value="comzotohcljc.dbio.core" />
      <arg value="comzotohcljc.dbio.sql" />
      <arg value="comzotohcljc.dbio.simple" />
      <arg value="comzotohcljc.dbio.composite" />
      <arg value="comzotohcljc.dbio.connect" />
      <arg value="comzotohcljc.dbio.drivers" />
      <arg value="comzotohcljc.dbio.sqlserver" />
      <arg value="comzotohcljc.dbio.h2" />
      <arg value="comzotohcljc.dbio.oracle" />
      <arg value="comzotohcljc.dbio.mysql" />
      <arg value="comzotohcljc.dbio.postgresql" />

      <arg value="comzotohcljc.hohenheim.core.constants" />
      <arg value="comzotohcljc.hohenheim.core.climain" />
      <arg value="comzotohcljc.hohenheim.core.sys" />
      <arg value="comzotohcljc.hohenheim.etc.cmdline" />
      <arg value="comzotohcljc.hohenheim.etc.core" />
      <arg value="comzotohcljc.hohenheim.etc.misc" />

      <arg value="comzotohcljc.hohenheim.impl.defaults" />
      <arg value="comzotohcljc.hohenheim.impl.ext" />
      <arg value="comzotohcljc.hohenheim.impl.sys" />
      <arg value="comzotohcljc.hohenheim.impl.exec" />

      <arg value="comzotohcljc.hohenheim.io.context"/>
      <arg value="comzotohcljc.hohenheim.io.core"/>
      <arg value="comzotohcljc.hohenheim.io.events"/>
      <arg value="comzotohcljc.hohenheim.io.files"/>
      <arg value="comzotohcljc.hohenheim.io.http"/>
      <arg value="comzotohcljc.hohenheim.io.jms"/>
      <arg value="comzotohcljc.hohenheim.io.loops"/>
      <arg value="comzotohcljc.hohenheim.io.mails"/>
      <arg value="comzotohcljc.hohenheim.io.netty"/>
      <arg value="comzotohcljc.hohenheim.io.servlet"/>
      <arg value="comzotohcljc.hohenheim.io.triggers"/>

      <arg value="comzotohcljc.wflow.activity" />
      <arg value="comzotohcljc.wflow.point" />
      <arg value="comzotohcljc.wflow.core" />
      <arg value="comzotohcljc.wflow.composites" />
      <arg value="comzotohcljc.wflow.conditionals" />
      <arg value="comzotohcljc.wflow.delays" />
      <arg value="comzotohcljc.wflow.user" />

    </java>
  </target>

  <target name="compile_and_jar">

    <!-- build the classloaders -->

    <scalac srcdir="${src.dir}/scala" destdir="${build.dir}" classpathref="compile.path.id"
      fork="true" jvmargs="-Xmx5120M -Xms1024M">
      <include name="com/zotoh/hohenheim/loaders/**/*.scala"/>
    </scalac>
    <jar destfile="${distrib.dir}/${PID}-spec-${build.version}.jar" >
      <fileset dir="${build.dir}">
      </fileset>
    </jar>

    <delete dir="${build.dir}"/>
    <mkdir dir="${build.dir}"/>

    <!-- build java + scala stuff -->

    <antcall target="compile_java" />

    <scalac srcdir="${src.dir}/scala" destdir="${build.dir}" classpathref="compile.path.id"
      fork="true" jvmargs="-Xmx5120M -Xms1024M">
      <exclude name="**/loaders/*.scala"/>
      <include name="**/*.scala"/>
    </scalac>

    <antcall target="compile_clj" />

    <!-- copy over other resources -->

    <copy todir="${build.dir}">
      <fileset dir="${src.dir}/java">
        <exclude name="**/*.java"/>
        <exclude name="**/.svn"/>
      </fileset>
      <fileset dir="${src.dir}/scala">
        <exclude name="**/*.scala"/>
        <exclude name="**/.svn"/>
      </fileset>
      <fileset dir="${src.dir}/clojure">
        <exclude name="**/*.clj"/>
        <exclude name="**/.svn"/>
      </fileset>
    </copy>

    <jar destfile="${distrib.dir}/${PID}-${build.version}.jar" >
      <fileset dir="${build.dir}">
        <exclude name="**/log4j.properties"/>
        <exclude name="**/logback.xml"/>
      </fileset>
    </jar>
  </target>

  <!--
       compile test code
       -->

  <target name="compile_test_code" >
    <mkdir dir="${report.test.dir}"/>
    <mkdir dir="${build.test.dir}"/>
    <!-- TODO: do the test stuff here -->
    <copy todir="${build.test.dir}">
      <fileset dir="${test.dir}/clojure">
        <exclude name="**/log4j.properties"/>
        <exclude name="**/logback.xml"/>
        <exclude name="**/.svn"/>
        <exclude name="**/*.groovy"/>
        <exclude name="**/*.scala"/>
        <exclude name="**/*.java"/>
        <exclude name="**/*.clj"/>
      </fileset>
    </copy>

  </target>

  <!--
       run test code
       -->

  <target name="run_test_code" >
    <echo message="No test to run."/>
  </target>


  <!--
       pack api and other docs
       -->

  <target name="pack_all_docs">
    <mkdir dir="${pack.dir}/docs/api"/>
    <copy todir="${pack.dir}/docs">
      <fileset dir="${basedir}/docs" erroronmissingdir="false">
        <exclude name="dummy.txt"/>
        <exclude name=".svn"/>
      </fileset>
    </copy>
  </target>


  <!--
       pack libraries
       -->

  <target name="pack_all_libs">
    <copy todir="${pack.dir}/lib">
      <fileset dir="${lib.dir}/libjar" >
      </fileset>
    </copy>
  </target>

  <!--
       pack distro libs
       -->

  <target name="pack_all_dist">
    <copy todir="${pack.dir}/dist">
      <fileset dir="${distrib.dir}">
        <exclude name="*-spec-*.jar"/>
      </fileset>
    </copy>
    <copy todir="${pack.dir}/boot">
      <fileset dir="${distrib.dir}">
        <include name="*-spec-*.jar"/>
      </fileset>
    </copy>
  </target>

  <!--
       pack resources
       -->

  <target name="pack_resources">

    <copy todir="${pack.dir}/etc">
      <fileset dir="${basedir}/etc"/>
    </copy>

    <copy todir="${pack.dir}/conf">
      <fileset dir="${basedir}/conf"/>
    </copy>

  </target>

  <!--
       pack scripts
       -->

  <target name="pack_bin_scripts">
    <copy todir="${pack.dir}/bin" >
      <fileset dir="${basedir}/bin" erroronmissingdir="false">
        <exclude name=".svn"/>
      </fileset>
    </copy>
    <chmod dir="${pack.dir}/bin" perm="755" includes="*"/>
  </target>

  <!--
       pack license files
       -->

  <target name="pack_all_lics">
    <copy todir="${pack.dir}/lics" >
      <fileset dir="${basedir}/lics" erroronmissingdir="false">
        <exclude name=".svn"/>
      </fileset>
    </copy>
  </target>

  <!--
       pack source code
       -->

  <target name="pack_source_code" >
    <copy todir="${pack.dir}/docs/src/main/clojure">
      <fileset dir="${src.dir}/clojure" />
    </copy>
    <copy todir="${pack.dir}/docs/src/main/scala">
      <fileset dir="${src.dir}/scala" />
    </copy>
    <copy todir="${pack.dir}/docs/src/main/java">
      <fileset dir="${src.dir}/java" />
    </copy>
  </target>

  <!--
       pack samples and/or demos
       -->

  <target name="pack_samples" >
  </target>


  <!--
       public TARGETS
       -->


  <target name="release" depends="common.pub-distro"/>
  <target name="jar" depends="common.pub-jar"/>
  <target name="test" depends="common.test-build"/>


  <!--
       housekeeping stuff
       -->


  <target name="clean4distro">
    <delete dir="${ivy.lcache.dir}/com.zotoh/${ant.project.name}" quiet="true"/>
    <delete dir="${ivy.lrepos.dir}/com.zotoh/${ant.project.name}" quiet="true"/>
  </target>

</project>



